[{"/home/jherson/Desktop/workspace/microservice/client/src/index.js":"1","/home/jherson/Desktop/workspace/microservice/client/src/App.js":"2","/home/jherson/Desktop/workspace/microservice/client/src/CreatePost.js":"3","/home/jherson/Desktop/workspace/microservice/client/src/getPosts.js":"4","/home/jherson/Desktop/workspace/microservice/client/src/Comments.js":"5","/home/jherson/Desktop/workspace/microservice/client/src/GetComment.js":"6"},{"size":158,"mtime":1685340384378,"results":"7","hashOfConfig":"8"},{"size":407,"mtime":1685340384378,"results":"9","hashOfConfig":"8"},{"size":780,"mtime":1685341180038,"results":"10","hashOfConfig":"8"},{"size":1113,"mtime":1685340384378,"results":"11","hashOfConfig":"8"},{"size":859,"mtime":1685340384378,"results":"12","hashOfConfig":"8"},{"size":607,"mtime":1685340384378,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"24zeam",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/home/jherson/Desktop/workspace/microservice/client/src/index.js",[],["31","32"],"/home/jherson/Desktop/workspace/microservice/client/src/App.js",["33"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport CreatePost from './CreatePost';\nimport GetPost from './getPosts';\n\nexport default () => {\n    return (\n        <div className=\"container\">\n\n            <p> Create New Post </p>\n            <CreatePost />\n\n            <p>Posts</p>\n            <GetPost />\n        </div>\n    );\n}","/home/jherson/Desktop/workspace/microservice/client/src/CreatePost.js",["34"],"/home/jherson/Desktop/workspace/microservice/client/src/getPosts.js",["35"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Comments from './Comments'\nimport CommentsList from './GetComment'\n\nexport default () => {\n\n    const [posts, setPosts] = useState({})\n    const fatchPosts = async () => {\n        await axios.get('http://localhost:4002/posts').then(result => {\n            console.log(result.data)\n            setPosts(result.data)\n\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    useEffect(() => {\n        fatchPosts()\n\n    }, [])\n\n\n    const renderPosts = Object.values(posts).map(post => {\n\n        return (\n            <div className=\"card\" style={{ width: '30%', marginBottom: '20px' }} key={post.id}>\n                <div className=\"card-body\">\n                    <h3>{post.title}</h3>\n                    <p>{post.id}</p>\n                    <CommentsList comments={post.comments} />\n                    <Comments postId={post.id} />\n                </div>\n            </div>\n        );\n\n    })\n\n    return <div className=\"d-flex flex-row flex-wrap justify-content-between\">\n        {renderPosts}\n    </div>\n}","/home/jherson/Desktop/workspace/microservice/client/src/Comments.js",["36"],"import axios from 'axios'\nimport React, { useState } from 'react'\nexport default ({postId}) => {\n\n    const [content ,setContent] = useState('')\n    const submitNewCommand = async(e)=>{ \n        e.preventDefault();\n        await axios.post(`http://localhost:4001/posts/${postId}/comments` ,{content}).then(result => {\n               setContent('')\n        }).catch(err => {\n            console.log(err)\n        })\n\n    }\n    return (\n        <div>\n            <form onSubmit={submitNewCommand}>\n                \n                <div className=\"form-group\">\n                    <label for=\"name\" >New Comment</label>\n                    <input value={content} onChange={e=>setContent(e.target.value) } type=\"text\" className=\"form-control\" />\n\n                </div>\n<button className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}","/home/jherson/Desktop/workspace/microservice/client/src/GetComment.js",["37"],"import React from 'react'\n\n\nexport default ({ comments }) => {\n\n    const renderComments = comments.map(comment => {\n        let content;\n        if (comment.status === 'approved') {\n            content = comment.content\n\n        }\n        if (comment.status === 'rejected') {\n            content = 'This comment has been Rejected'\n        }\n        if (comment.status === 'pending') {\n            content = 'This comment is awating moderation'\n        }\n        console.log(comment.status)\n\n        return <li key={comment.id}>{content}</li>\n\n\n    })\n\n    return <ul>\n\n        {renderComments}\n    </ul>\n\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":1,"nodeType":"44","endLine":18,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":6,"column":1,"nodeType":"44","endLine":33,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":6,"column":1,"nodeType":"44","endLine":43,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":3,"column":1,"nodeType":"44","endLine":28,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":4,"column":1,"nodeType":"44","endLine":30,"endColumn":2},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]